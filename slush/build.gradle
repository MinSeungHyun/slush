apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 18
        targetSdkVersion 29
        versionCode 1
        versionName rootProject.ext.slushVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "androidx.core:core-ktx:$androidKtxVersion"
    api "androidx.recyclerview:recyclerview:$recyclerViewVersion"
}

apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

group = rootProject.ext.slushGroupName
version = rootProject.ext.slushVersionName

bintray {
    Properties properties = new Properties()
    if (project.rootProject.file('local.properties').exists()) {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    } else {
        properties.put('bintray.user', System.getenv('BINTRAY_USER'))
        properties.put('bintray.apiKey', System.getenv('BINTRAY_API_KEY'))
    }

    user = properties.getProperty('bintray.user')
    key = properties.getProperty('bintray.apiKey')
    configurations = ['archives']
    publish = true

    pkg {
        repo = 'maven'
        name = project.name
        licenses = ['MIT']
        vcsUrl = 'https://github.com/minSeungHyun/slush.git'
        websiteUrl = 'https://github.com/minSeungHyun/slush'

        version {
            name = rootProject.ext.slushVersionName
            vcsTag = rootProject.ext.slushVersionName
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set('sources')
}

artifacts {
    archives sourcesJar
}

task findConventions {
    doLast {
        println project.getConvention()
    }
}
